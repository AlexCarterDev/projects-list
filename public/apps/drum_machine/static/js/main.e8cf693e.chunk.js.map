{"version":3,"sources":["reducers.js","actions.js","components/Title.js","components/Display.js","containers/DisplayContainer.js","components/SelectBankButton.js","components/BankPad.js","containers/BankPadContainer.js","components/Volume.js","containers/VolumeContainer.js","components/Panel.js","components/PlayButton.js","bank.js","components/DrumPad.js","containers/DrumPadSampleSelector.js","components/App.js","index.js"],"names":["combineReducers","volume","state","arguments","length","undefined","action","type","bankIndex","sampleDescription","description","Title","_ref","title","react_default","a","createElement","id","Display","text","console","log","connect","SelectBankButton","onClick","checked","className","BankPad","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","clickHandler","bind","assertThisInitialized","n","parseInt","substring","selectBank","buttons","texts","i","push","components_SelectBankButton","key","React","Component","BankPadContainer","dispatch","index","Volume","vol","handleChange","e","volumeChanged","target","value","setState","min","max","onChange","setVolume","Panel","DisplayContainer","containers_BankPadContainer","VolumeContainer","PlayButton","play","simulatePressButton","handleKeydown","audio","currentTime","_this2","button","classList","add","setTimeout","remove","keyCode","document","getElementById","addEventListener","removeEventListener","src","bankList","name","samples","url","DrumPad","playButtonClicked","bank","getBankByIndex","keyCodes","charCodeAt","_loop","PlayButton_PlayButton","DrumPadSampleSelector","App","components_Title","components_Panel","containers_DrumPadSampleSelector","store","createStore","rootReducer","getState","ReactDOM","render","es","components_App"],"mappings":"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","file":"static/js/main.e8cf693e.chunk.js","sourcesContent":["import { combineReducers } from 'redux'\r\nimport { SET_VOLUME, SELECT_BANK, SAMPLE_DESCRIPTION } from './actions.js'\r\n\r\nconst volume = (state = 100, action) => {\r\n    switch(action.type) {\r\n        case SET_VOLUME: {\r\n            return action.volume;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst bankIndex = (state = 0, action) => {\r\n    switch(action.type) {\r\n        case SELECT_BANK: {\r\n            return action.bankIndex;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst sampleDescription = (state = 'init', action) => {\r\n    switch(action.type) {\r\n        case SAMPLE_DESCRIPTION: {\r\n            return action.description;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nconst action = (state = 'init', action) => {\r\n    switch(action.type) {\r\n        case SAMPLE_DESCRIPTION: {\r\n            return 'sampleDescription'\r\n        }\r\n        case SELECT_BANK: {\r\n            return 'bankIndex'\r\n        }\r\n        case SET_VOLUME: {\r\n            return 'volume'\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    volume, \r\n    bankIndex,\r\n    sampleDescription,\r\n    action,\r\n})","export const SET_VOLUME = 'SET_VOLUME';\r\nexport const SELECT_BANK = 'SELECT_BANK';\r\nexport const SAMPLE_DESCRIPTION = 'SAMPLE_DESCRIPTION';\r\n\r\nexport const setVolume = volume => ({\r\n    type: SET_VOLUME,\r\n    volume,\r\n    action: 'volume'\r\n})\r\n\r\nexport const selectBank = index => ({\r\n    type: SELECT_BANK,\r\n    bankIndex: index,\r\n    action: 'bankIndex'\r\n})\r\n\r\nexport const sampleDescription = description => ({\r\n    type: SAMPLE_DESCRIPTION,\r\n    description,\r\n    action: 'bankDescription'\r\n})","import React from 'react';\r\n\r\nconst Title = ({title}) => {\r\n    return (\r\n        <div id='title-container'>\r\n            <h2>{title}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Title;","import React from 'react'\r\n\r\nconst Display = ({action, bankIndex, sampleDescription, volume}) => {\r\n    var text;\r\n\r\n    console.log(action);\r\n    switch (action) {\r\n        case 'volume': {\r\n            text = 'vol: ' + volume;\r\n            break;\r\n        }\r\n        case 'bankIndex': {\r\n            text = 'selB: ' + (bankIndex + 1);\r\n            break;\r\n        }\r\n        case 'sampleDescription': {\r\n            text = sampleDescription;\r\n            break;\r\n        }\r\n        default: {\r\n            text = 'Hello'\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id='display-container'>\r\n        <span id='display'>{text}</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display","import { connect } from 'react-redux'\r\nimport Display from '../components/Display'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    volume: state.volume,\r\n    action: state.action,\r\n    bankIndex: state.bankIndex,\r\n    sampleDescription: state.sampleDescription\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display)\r\n","import React from 'react';\r\n\r\nconst SelectBankButton = ({id, text, onClick, checked}) => {\r\n    console.log('SelectBankButton ' + id + ': render');\r\n    var className = checked ? \r\n        'button-blue button-blue-active' : \r\n        'bank-pad-button-not-selected';\r\n\r\n    return(\r\n        <button \r\n            className={className}\r\n            id={id}\r\n            onClick={() => onClick(id)}\r\n        >\r\n            {text}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default SelectBankButton;","import React from 'react';\r\nimport SelectBankButton from './SelectBankButton';\r\n\r\n\r\nexport default class BankPad extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.clickHandler = this.clickHandler.bind(this);\r\n    }\r\n\r\n    clickHandler(id) {\r\n        var n = parseInt(id.substring(id.length - 1), 10);\r\n        this.props.selectBank(n);\r\n    }\r\n\r\n    render() {\r\n        console.log('BankPad: render');\r\n        const buttons = [];\r\n        const texts = ['bank 1', 'bank 2', 'bank 3'];\r\n\r\n        for (let i = 0; i < texts.length; i++) {\r\n            buttons.push(\r\n                <SelectBankButton \r\n                    text={texts[i]}\r\n                    key={i}\r\n                    id={'bank-pad-' + i}\r\n                    onClick={this.clickHandler}\r\n                    checked={i === this.props.bankIndex} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport BankPad from '../components/BankPad'\r\nimport { selectBank } from '../actions'\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log('BankPadContainer: mapStateToProps')\r\n\r\n    return {\r\n        bankIndex: state.bankIndex\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    console.log('BankPadContainer: mapDispatchToProps')\r\n    return {\r\n        selectBank: (index) => dispatch(selectBank(index))\r\n    }\r\n}\r\n\r\nconst BankPadContainer = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(BankPad);\r\n\r\nexport default BankPadContainer","import React, { Component } from 'react'\r\n\r\nexport default class Volume extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            vol: 100\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.props.volumeChanged(e.target.value);\r\n        this.setState({\r\n            vol: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id='slider-container'>\r\n                <input type=\"range\" min=\"1\" max=\"100\" className=\"slider\" value={this.state.vol} onChange={this.handleChange}/>\r\n            </div>\r\n        )\r\n    }\r\n}","import { connect } from 'react-redux'\r\nimport { setVolume } from '../actions'\r\nimport Volume from '../components/Volume'\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        volumeChanged: (volume) => {dispatch(setVolume(volume))}\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Volume)\r\n","import React from 'react';\r\nimport DisplayContainer from '../containers/DisplayContainer';\r\nimport BankPadContainer from '../containers/BankPadContainer';\r\nimport VolumeContainer from '../containers/VolumeContainer';\r\n\r\nconst Panel = () => {\r\n    return (\r\n        <div id='panel'>\r\n            <DisplayContainer />\r\n            <BankPadContainer />\r\n            <VolumeContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Panel","import React, { Component } from 'react'\r\n\r\nexport default class PlayButton extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.play = this.play.bind(this);\r\n        this.simulatePressButton = this.simulatePressButton.bind(this);\r\n        this.handleKeydown = this.handleKeydown.bind(this);\r\n    }\r\n\r\n\r\n    play() {\r\n        console.log('PlayButton ' + this.props.description + ': play');\r\n        this.audio.currentTime = 0;\r\n        this.audio.play();\r\n        this.audio.volume = this.props.volume/100;\r\n        this.props.onClick();\r\n    }\r\n\r\n    simulatePressButton() {\r\n        this.button.classList.add('button-green-active');\r\n        setTimeout(() => {\r\n            this.button.classList.remove('button-green-active');\r\n        }, 100);\r\n    }\r\n\r\n    handleKeydown(e) {\r\n        if (e.keyCode === this.props.keyCode) {\r\n            console.log('keydown ' + e.keyCode);\r\n            this.simulatePressButton();\r\n            this.play(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.audio = document.getElementById(this.props.text);\r\n        this.button = document.getElementById(this.props.description);\r\n        document.addEventListener('keydown', this.handleKeydown);\r\n        \r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('keydown', this.handleKeydown);\r\n    }\r\n\r\n    render() {\r\n        console.log('PlayButton ' + this.props.description + ': render');\r\n\r\n        return (\r\n\r\n            <button \r\n                id={this.props.description}\r\n                className={'drum-pad button-green'}\r\n                onClick={this.play}\r\n            >\r\n                <audio className='clip' id={this.props.text} src={this.props.src} ></audio>\r\n                {this.props.text}\r\n            </button>\r\n        )\r\n    }\r\n}","export const bankList = [\r\n    // bank 1\r\n    {\r\n        name: 'bank 1',\r\n        samples: [\r\n            {\r\n                description: 'Heater-1',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-1.mp3'\r\n            },\r\n            {\r\n                description: 'Heater-2',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-2.mp3'\r\n            },\r\n            {\r\n                description: 'Heater-3',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-3.mp3'\r\n            },\r\n            {\r\n                description: 'Heater-4',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-4_1.mp3'\r\n            },\r\n            {\r\n                description: 'Clap',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Heater-6.mp3'\r\n            },\r\n            {\r\n                description: 'Open-HH',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Dsc_Oh.mp3'\r\n            },\r\n            {\r\n                description: 'Kick-n\\'-Hat',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Kick_n_Hat.mp3'\r\n            },\r\n            {\r\n                description: 'Kick',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/RP4_KICK_1.mp3'\r\n            },\r\n            {\r\n                description: 'Closed-HH',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Cev_H2.mp3'\r\n            },\r\n        ]\r\n    },\r\n    // bank 2\r\n    {\r\n        name: 'bank 2',\r\n        samples: [\r\n            {\r\n                description: 'Chord-1',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_1.mp3'\r\n            },\r\n            {\r\n                description: 'Chord-2',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_2.mp3'\r\n            },\r\n            {\r\n                description: 'Chord-3',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Chord_3.mp3'\r\n            },\r\n            {\r\n                description: 'Shaker',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Give_us_a_light.mp3'\r\n            },\r\n            {\r\n                description: 'Open-HH',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Dry_Ohh.mp3'\r\n            },\r\n            {\r\n                description: 'Closed-HH',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Bld_H1.mp3'\r\n            },\r\n            {\r\n                description: 'Punchy-Kick',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/punchy_kick_1.mp3'\r\n            },\r\n            {\r\n                description: 'Side-Stick',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/side_stick_1.mp3'\r\n            },\r\n            {\r\n                description: 'Snare',\r\n                url: 'https://s3.amazonaws.com/freecodecamp/drums/Brk_Snr.mp3'\r\n            },\r\n        ]\r\n    },\r\n    // bank 3\r\n    {\r\n        name: 'bank 3',\r\n        samples: [\r\n            {\r\n                description: '808',\r\n                url: 'audio/808agogo.aif.mp3'\r\n            },\r\n            {\r\n                description: 'Badcow',\r\n                url: 'audio/badcow.aif.mp3'\r\n            },\r\n            {\r\n                description: 'Click',\r\n                url: 'audio/bellclicker.aif.mp3'\r\n            },\r\n            {\r\n                description: 'Clave',\r\n                url: 'audio/clave.aif.mp3'\r\n            },\r\n            {\r\n                description: 'Tom',\r\n                url: 'audio/distortotom.aif.mp3'\r\n            },\r\n            {\r\n                description: 'FingerSnap',\r\n                url: 'audio/FingerSnap01.wav.mp3'\r\n            },\r\n            {\r\n                description: 'HH',\r\n                url: 'audio/hh4.aif.mp3'\r\n            },\r\n            {\r\n                description: 'Zap',\r\n                url: 'audio/noisezapper.aif.mp3'\r\n            },\r\n            {\r\n                description: 'Ping',\r\n                url: 'audio/pingtoohigh.aif.mp3'\r\n            },\r\n        ]\r\n    }\r\n];\r\n\r\nexport function getBankByIndex(i) {\r\n    return bankList[i];\r\n}","import React from 'react';\r\nimport PlayButton from './PlayButton'\r\nimport { getBankByIndex } from '../bank'\r\n\r\nconst DrumPad = ({bankIndex, playButtonClicked, volume}) => {\r\n    console.log('DrumPad: render');\r\n    const texts = ['Q', 'W', 'E', 'A', 'S', 'D', 'Z', 'X', 'C'];\r\n    var bank = getBankByIndex(bankIndex);\r\n    const keyCodes = [];\r\n    for (let i = 0; i < texts.length; i++) {\r\n        keyCodes.push(texts[i].charCodeAt(0));\r\n    }\r\n\r\n    let buttons = [];\r\n    for (let i = 0; i < texts.length; i++) {\r\n        \r\n        buttons.push(\r\n            <PlayButton \r\n                key={i}\r\n                volume={volume}\r\n                text={texts[i]}\r\n                id={'drum-pad-' + i}\r\n                src={bank.samples[i].url}\r\n                keyCode={keyCodes[i]}\r\n                description={bank.samples[i].description}\r\n                onClick={() => playButtonClicked(bank.samples[i].description)}\r\n            />\r\n        );\r\n    }\r\n\r\n\r\n    return(\r\n        <div id='drum-pad'>\r\n            {buttons}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DrumPad","import { connect } from 'react-redux'\r\nimport DrumPad from '../components/DrumPad'\r\nimport { sampleDescription } from '../actions'\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    console.log('DrumPadSampleSelector: mapStateToProps')\r\n    return {\r\n        bankIndex: state.bankIndex,\r\n        volume: state.volume\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    console.log('DrumPadSampleSelector: mapDispatchToProps');\r\n    return {\r\n        playButtonClicked: (text) => {dispatch(sampleDescription(text))}\r\n    }\r\n}\r\n\r\nconst DrumPadSampleSelector = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps\r\n)(DrumPad);\r\n\r\nexport default DrumPadSampleSelector","import React from 'react';\r\nimport Title from './Title';\r\nimport Panel from './Panel';\r\nimport DrumPadSampleSelector from '../containers/DrumPadSampleSelector'\r\n\r\nconst App = () => {\r\n    console.log('App: render');\r\n    return(\r\n        <div id='drum-machine'>\r\n            <Title title='Drum machine' />\r\n            <Panel />\r\n            <DrumPadSampleSelector />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport rootReducer from './reducers';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport App from './components/App'\r\n\r\nconst store = createStore(rootReducer);\r\nconsole.log('Store');\r\nconsole.log(store.getState());\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n\r\n"],"sourceRoot":""}