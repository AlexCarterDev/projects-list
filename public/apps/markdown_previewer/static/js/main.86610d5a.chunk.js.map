{"version":3,"sources":["index.js"],"names":["Preview","props","_this","Object","C_Users_Alex_Desktop_Projects_Code_my_frontend_snippets_p03_markdown_previewer_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","C_Users_Alex_Desktop_Projects_Code_my_frontend_snippets_p03_markdown_previewer_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","C_Users_Alex_Desktop_Projects_Code_my_frontend_snippets_p03_markdown_previewer_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","renderer","marked","Renderer","link","href","title","text","concat","console","log","html","markdownText","breaks","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","id","dangerouslySetInnerHTML","__html","React","Component","Title","Editor","_this2","state","markdown","loadDefaultMarkdown","bind","C_Users_Alex_Desktop_Projects_Code_my_frontend_snippets_p03_markdown_previewer_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_0__","handleChange","updateText","loadDefaultMarkdownForCodepen","setState","updatePreview","event","target","value","_this3","fetch","then","r","catch","e","onChange","Markdown","App","_this4","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86610d5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport marked from 'marked';\r\n\r\nclass Preview extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.renderer = new marked.Renderer();\r\n\r\n        // Override html rendering link\r\n        this.renderer.link = function(href, title, text) {\r\n            return `\r\n                <a href='${href}' target=_blank>${text}</a>\r\n            `;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        console.log('Preview: render');\r\n        var html = marked(this.props.markdownText, {renderer: this.renderer, breaks: true});\r\n        \r\n        return(\r\n            <div>\r\n                <div id='preview-title'>Preview</div>\r\n                <div id='preview' dangerouslySetInnerHTML={{__html: html}}>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass Title extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id='title'>\r\n                Markdown\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst defualtMarkdown = \r\n`# Welcome to my React Markdown Previewer!\r\n\r\n## This is a sub-heading...\r\n### And here's some other cool stuff:\r\n  \r\nHeres some code, \\`<div></div>\\`, between 2 backticks.\r\n\r\n\\`\\`\\`\r\n// this is multi-line code:\r\n\r\nfunction anotherExample(firstLine, lastLine) {\r\n  if (firstLine == '\\`\\`\\`' && lastLine == '\\`\\`\\`') {\r\n    return multiLineCode;\r\n  }\r\n}\r\n\\`\\`\\`\r\n  \r\nYou can also make text **bold**... whoa!\r\nOr _italic_.\r\nOr... wait for it... **_both!_**\r\nAnd feel free to go crazy ~~crossing stuff out~~.\r\n\r\nThere's also [links](https://www.freecodecamp.com), and\r\n> Block Quotes!\r\n\r\nAnd if you want to get really crazy, even tables:\r\n\r\nWild Header | Crazy Header | Another Header?\r\n------------ | ------------- | ------------- \r\nYour content can | be here, and it | can be here....\r\nAnd here. | Okay. | I think we get it.\r\n\r\n- And of course there are lists.\r\n  - Some are bulleted.\r\n     - With different indentation levels.\r\n        - That look like this.\r\n\r\n\r\n1. And there are numbererd lists too.\r\n1. Use just 1s if you want! \r\n1. But the list goes on...\r\n- Even if you use dashes or asterisks.\r\n* And last but not least, let's not forget embedded images:\r\n\r\n![React Logo w/ Text](https://goo.gl/Umyytc)`;\r\n\r\nclass Editor extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            markdown: '',\r\n        };\r\n\r\n        this.loadDefaultMarkdown = this.loadDefaultMarkdown.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.updateText = this.updateText.bind(this);\r\n        this.loadDefaultMarkdownForCodepen = this.loadDefaultMarkdownForCodepen.bind(this);\r\n    }\r\n\r\n    updateText(text) {\r\n        this.setState({\r\n            markdown: text\r\n        });\r\n        this.props.updatePreview(text);\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.updateText(event.target.value);\r\n    }\r\n\r\n    loadDefaultMarkdownForCodepen() {\r\n        this.updateText(defualtMarkdown);\r\n    }\r\n\r\n    loadDefaultMarkdown() {\r\n        console.log('Editr: start loading default text');\r\n        const fileUrl = 'markdown-by-default';\r\n        fetch(fileUrl)\r\n            .then((r) => r.text())\r\n            .then((text) => {\r\n                console.log('Editor: default text loaded');\r\n                this.updateText(text);\r\n            })\r\n            .catch((e) => console.log(e));\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Editor: did mount');\r\n        this.loadDefaultMarkdown();\r\n    }\r\n\r\n    render() {\r\n        console.log('Editor: render');\r\n        return (\r\n            <textarea\r\n                id='editor'\r\n                value={this.state.markdown}\r\n                onChange={this.handleChange}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nclass Markdown extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id='markdown'>\r\n                <Title />\r\n                <Editor updatePreview={this.props.updatePreview}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            markdownText: ''\r\n        };\r\n        this.updatePreview = this.updatePreview.bind(this);\r\n    }\r\n\r\n    updatePreview(text) {\r\n        console.log('App: updatePreview');\r\n        this.setState({\r\n            markdownText: text\r\n        });\r\n    }\r\n\r\n    render() {\r\n        console.log('App: render')\r\n        return(\r\n            <div>\r\n                <Markdown updatePreview={this.updatePreview}/>\r\n                <Preview  markdownText={this.state.markdownText}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}