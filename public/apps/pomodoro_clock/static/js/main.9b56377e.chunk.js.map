{"version":3,"sources":["index.js"],"names":["pomodoroClock","htmlAudio","ButtonsContainer","startStopText","_this","this","props","pomodoroState","POMODORO_STATE_PAUSE","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","id","className","onClick","decrementTime","console","log","clearInterval","setInterval","start","stop","pause","currentTime","reset","React","Component","TimeContainer","document","getElementById","title","seconds","timeLeft","getSeconds","slice","minutes","getMinutes","pomodoroLastState","POMODORO_STATE_SESSION","isLastSecond","play","src","SessionLengthContainer","sessionLength","increment","decrement","BreakLengthContainer","breakLength","BreakAndSessionContainer","BreakLengthIncDec","SessionLengthIncDec","TitleContainer","PomodoroApp","TimeLeft","ButtonsResetStartStop","connect","state","dispatch","incrementSession","decrementSession","incrementBreak","decrementBreak","type","Time","Object","C_Users_Alex_Desktop_Projects_Code_my_frontend_snippets_p06_pomodoro_clock_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","bind","decrementSeconds","isEnd","getClone","initState","isLengthCorrect","length","changeBreakLength","val","C_Users_Alex_Desktop_Projects_Code_my_frontend_snippets_p06_pomodoro_clock_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","changeSessionLength","store","createStore","arguments","undefined","action","partState","time","ReactDOM","render","react_redux__WEBPACK_IMPORTED_MODULE_10__"],"mappings":"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","file":"static/js/main.9b56377e.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport { createStore } from 'redux';\r\nimport { Provider, connect } from 'react-redux'\r\n\r\ndebugger;\r\n// --- Components ---\r\nvar pomodoroClock;\r\nvar htmlAudio;\r\n\r\nfunction pomodoroClockHandle(decrementTime) {\r\n    return () => {\r\n        decrementTime();\r\n    }\r\n}\r\n\r\nclass ButtonsContainer extends React.Component {\r\n    render() {\r\n        var startStopText;\r\n\r\n        if (this.props.pomodoroState === POMODORO_STATE_PAUSE) {\r\n            startStopText = 'Start';\r\n        } else {\r\n            startStopText = 'Stop';\r\n        }\r\n\r\n        const startStop = () => {\r\n            if (this.props.pomodoroState === POMODORO_STATE_PAUSE) {\r\n                console.log('setInterval')\r\n                clearInterval(pomodoroClock);\r\n                pomodoroClock = setInterval(pomodoroClockHandle(this.props.decrementTime), 1000);\r\n                this.props.start();\r\n            } else {\r\n                console.log('clearInterval')\r\n                clearInterval(pomodoroClock);\r\n                this.props.stop();\r\n            }\r\n        }\r\n        const resetHandle = () => {\r\n            htmlAudio.pause();\r\n            htmlAudio.currentTime = 0;\r\n\r\n            clearInterval(pomodoroClock);\r\n            this.props.reset();\r\n        }\r\n        return (\r\n            <div id='buttons-container'>\r\n                <button id='start_stop' className='rect-button' onClick={startStop}>{startStopText}</button>\r\n                <button id='reset' className='rect-button' onClick={resetHandle}>Reset</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TimeContainer extends React.Component {\r\n    componentDidMount() {\r\n        htmlAudio = document.getElementById('beep');\r\n    }\r\n\r\n    render() {\r\n        var seconds = ('0' + this.props.timeLeft.getSeconds()).slice(-2);\r\n        var minutes = ('0' + this.props.timeLeft.getMinutes()).slice(-2);\r\n        var title;\r\n\r\n        if (this.props.pomodoroState === POMODORO_STATE_PAUSE) {\r\n            title = this.props.pomodoroLastState === POMODORO_STATE_SESSION ? 'Session' : 'Break';\r\n        } else {\r\n            title = this.props.pomodoroState === POMODORO_STATE_SESSION ? 'Session' : 'Break';\r\n        }\r\n\r\n        if (this.props.isLastSecond) {\r\n            htmlAudio.play();\r\n        }\r\n        return (\r\n            <div id='time-container'>\r\n                <div id='timer-label'>{title}</div>\r\n                <div id='time-left'>{minutes + ':' + seconds}</div>\r\n                <audio id='beep' src='crunch-chords.mp3'></audio>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass SessionLengthContainer extends React.Component {\r\n    render() {\r\n        console.log('Render SessionLengthContainer, sessionLength=' + this.props.sessionLength);\r\n        return (\r\n            <div id='session-length-container'>\r\n                <div id='session-label'>Session Length</div>\r\n                <button id='session-increment' className='round-button' onClick={this.props.increment}>+</button>\r\n                <span id='session-length'>{this.props.sessionLength}</span>\r\n                <button id='session-decrement' className='round-button' onClick={this.props.decrement}>-</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass BreakLengthContainer extends React.Component {\r\n    render() {\r\n        console.log('Render BreakLengthContainer, breakLength=' + this.props.breakLength);\r\n        return (\r\n            <div id='break-length-container'>\r\n                <div id='break-label'>Break Length</div>\r\n                <button id='break-increment' className='round-button' onClick={this.props.increment}>+</button>\r\n                <span id='break-length'>{this.props.breakLength}</span>\r\n                <button id='break-decrement' className='round-button' onClick={this.props.decrement}>-</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass BreakAndSessionContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id='break-and-session-container'>\r\n                <BreakLengthIncDec />\r\n                <SessionLengthIncDec />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass TitleContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id='title-container'>\r\n                <h1>Pomodoro Clock</h1>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass PomodoroApp extends React.Component {\r\n    render() {\r\n        return (\r\n            <div id='pomodoro'>\r\n                <TitleContainer/>\r\n                <BreakAndSessionContainer />\r\n                <TimeLeft />\r\n                <ButtonsResetStartStop />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// --- Containers ---\r\nconst SessionLengthIncDec = connect(\r\n    (state) => ({\r\n        sessionLength: state.sessionLength\r\n    }),\r\n    (dispatch) => ({\r\n        increment: () => dispatch(incrementSession()),\r\n        decrement: () => dispatch(decrementSession())\r\n    })\r\n)(SessionLengthContainer)\r\nconst BreakLengthIncDec = connect(\r\n    (state) => ({\r\n        breakLength: state.breakLength\r\n    }),\r\n    (dispatch) => ({\r\n        increment: () => dispatch(incrementBreak()),\r\n        decrement: () => dispatch(decrementBreak())\r\n    })\r\n)(BreakLengthContainer)\r\nconst ButtonsResetStartStop = connect(\r\n    (state) => ({\r\n        pomodoroState: state.pomodoroState \r\n    }),\r\n    (dispatch) => ({\r\n        start: () => dispatch(start()),\r\n        stop: () => dispatch(stop()),\r\n        reset: () => dispatch(reset()),\r\n        decrementTime: () => dispatch(decrementTime()),\r\n    })\r\n)(ButtonsContainer)\r\nconst TimeLeft = connect(\r\n    (state) => ({\r\n        isLastSecond: state.isLastSecond,\r\n        timeLeft: state.timeLeft,\r\n        pomodoroState: state.pomodoroState,\r\n        pomodoroLastState: state.pomodoroLastState\r\n    })\r\n)(TimeContainer)\r\n// --- Actions ---\r\nconst INCREMENT_BREAK = 'inc_break';\r\nconst DECREMENT_BREAK = 'dec_break';\r\nconst INCREMENT_SESSION = 'inc_session';\r\nconst DECREMENT_SESSION = 'dec_session';\r\nconst RESET = 'reset';\r\nconst START= 'start';\r\nconst STOP = 'stop';\r\nconst DECREMENT_TIME = 'dec_time';\r\n\r\nconst incrementBreak = () => ({\r\n    type: INCREMENT_BREAK\r\n})\r\nconst decrementBreak = () => ({\r\n    type: DECREMENT_BREAK\r\n})\r\nconst incrementSession = () => ({\r\n    type: INCREMENT_SESSION\r\n})\r\nconst decrementSession = () => ({\r\n    type: DECREMENT_SESSION\r\n})\r\nconst reset = () => ({\r\n    type: RESET\r\n})\r\nconst start = () => ({\r\n    type: START\r\n})\r\nconst stop = () => ({\r\n    type: STOP\r\n})\r\nconst decrementTime = () => ({\r\n    type: DECREMENT_TIME\r\n})\r\n\r\n\r\n// --- Reducers ---\r\nconst POMODORO_STATE_BREAK = 'break';\r\nconst POMODORO_STATE_SESSION = 'session';\r\nconst POMODORO_STATE_PAUSE = 'pause';\r\n\r\nclass Time {\r\n    constructor(minutes, seconds) {\r\n        this.minutes = minutes;\r\n        this.seconds = seconds;\r\n        this.getSeconds = this.getSeconds.bind(this);\r\n        this.getMinutes = this.getMinutes.bind(this);\r\n        this.decrementSeconds = this.decrementSeconds.bind(this);\r\n        this.isEnd = this.isEnd.bind(this);\r\n        this.getClone = this.getClone.bind(this);\r\n    }\r\n    \r\n    getSeconds() {\r\n        return this.seconds\r\n    }\r\n    getMinutes() {\r\n        return this.minutes\r\n    }\r\n    decrementSeconds() {\r\n        if (this.seconds <= 0) {\r\n            if (this.minutes > 0) {\r\n                this.minutes--;\r\n                this.seconds = 59;\r\n            }\r\n        } else {\r\n            this.seconds--;\r\n        }\r\n    }\r\n    isEnd() {\r\n        return (this.seconds <= 0) && (this.minutes <= 0);\r\n    }\r\n    getClone() {\r\n        return new Time(this.minutes, this.seconds);\r\n    }\r\n}\r\n\r\nconst initState = {\r\n    breakLength: 5,\r\n    sessionLength: 25,\r\n    timeLeft: new Time(25, 0),\r\n    pomodoroState: POMODORO_STATE_PAUSE,\r\n    pomodoroLastState: POMODORO_STATE_SESSION,\r\n    isLastSecond: false,\r\n}\r\n\r\nfunction isLengthCorrect(length) {\r\n    return (length > 0) && (length <= 60)\r\n}\r\nfunction changeBreakLength(state, val) {\r\n    var length = state.breakLength + val;\r\n    if (isLengthCorrect(length)) {\r\n        return {\r\n            ...state,\r\n            breakLength: length\r\n        }\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\nfunction changeSessionLength(state, val) {\r\n    var length = state.sessionLength + val;\r\n    if (isLengthCorrect(length)) {\r\n        return {\r\n            ...state,\r\n            timeLeft: new Time(length, 0),\r\n            sessionLength: length\r\n        }\r\n    } else {\r\n        return state;\r\n    }\r\n}\r\n\r\nconst pomodoroReducer = (state = initState, action) => {\r\n    console.log('Action:', action);\r\n    switch (action.type) {\r\n        case INCREMENT_BREAK: {\r\n            return changeBreakLength(state, +1);\r\n        }\r\n        case DECREMENT_BREAK: {\r\n            return changeBreakLength(state, -1);\r\n        }\r\n        case INCREMENT_SESSION: {\r\n            return changeSessionLength(state, +1);\r\n        }\r\n        case DECREMENT_SESSION: {\r\n            return changeSessionLength(state, -1);\r\n        }\r\n        case START: {\r\n            if (state.pomodoroState === POMODORO_STATE_PAUSE) {\r\n                return {\r\n                    ...state,\r\n                    pomodoroState: state.pomodoroLastState,\r\n                    pomodoroLastState: POMODORO_STATE_PAUSE,\r\n                };\r\n            } else {\r\n                return state;\r\n            }\r\n        }\r\n        case STOP: {\r\n            if (state.pomodoroState !== POMODORO_STATE_PAUSE) {\r\n                return {\r\n                    ...state,\r\n                    pomodoroState: POMODORO_STATE_PAUSE,\r\n                    pomodoroLastState: state.pomodoroState,\r\n                }\r\n            } else {\r\n                return state\r\n            }\r\n        }\r\n        case DECREMENT_TIME: {\r\n            var partState;\r\n\r\n            if (state.timeLeft.isEnd()) {\r\n                console.log(state);\r\n                if (state.pomodoroState === POMODORO_STATE_BREAK) {\r\n                    partState = {\r\n                        isLastSecond: false,\r\n                        pomodoroState: POMODORO_STATE_SESSION,\r\n                        pomodoroLastState: state.pomodoroState,\r\n                        timeLeft: new Time(state.sessionLength, 0)\r\n                    }\r\n                } else if (state.pomodoroState === POMODORO_STATE_SESSION) {\r\n                    partState = {\r\n                        isLastSecond: false,\r\n                        pomodoroState: POMODORO_STATE_BREAK,\r\n                        pomodoroLastState: state.pomodoroState,\r\n                        timeLeft: new Time(state.breakLength, 0)\r\n                    }\r\n                } else {\r\n                    return state\r\n                }\r\n            } else {\r\n                var time = state.timeLeft.getClone();\r\n                time.decrementSeconds();\r\n                if (time.isEnd()) {\r\n                    partState = {\r\n                        isLastSecond: true,\r\n                        timeLeft: time\r\n                    }    \r\n                } else {\r\n                    partState = {\r\n                        isLastSecond: false,\r\n                        isEnd: false,\r\n                        timeLeft: time\r\n                    }\r\n                }\r\n            }\r\n\r\n            return { ...state, ...partState };\r\n        }\r\n        case RESET: {\r\n            return initState;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst store = createStore(pomodoroReducer);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PomodoroApp />\r\n    </Provider>\r\n    , document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}