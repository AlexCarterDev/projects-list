{"version":3,"sources":["reducers.js","components/Display.js","containers/DisplayContainer.js","components/Formula.js","containers/FormulaContainer.js","components/Buttons.js","containers/ButtonsContainer.js","components/Calculator.js","index.js","actions.js"],"names":["redux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_actions__WEBPACK_IMPORTED_MODULE_1__","initialState","isNumber","n","test","isContainEqulasSign","f","length","getLast","addOperation","formula","op","result","parseFloat","push","str","join","eval","toString","pop","addDigit","digit","last","main","state","arguments","undefined","action","type","OPERATION","slice","operation","DIGIT","CLEAR","combineReducers","Display","react_default","a","createElement","id","this","props","Component","connect","Formula","Buttons","_this","onClick","clear","dispatch","d","o","Calculator","FormulaContainer","DisplayContainer","ButtonsContainer","store","createStore","rootReducer","ReactDOM","render","es","Calculator_Calculator","document","getElementById","__webpack_exports__"],"mappings":"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","file":"static/js/main.c5b1c98d.chunk.js","sourcesContent":["/* eslint no-eval: 0 */\r\n\r\nimport { combineReducers } from \"redux\";\r\nimport { OPERATION, CLEAR, DIGIT } from './actions'\r\n\r\nconst initialState = ['0'];\r\n\r\nexport function isNumber(n) {\r\n    if (n === '-') {\r\n        return false;\r\n    }\r\n    return /^-?\\d*\\.?\\d*$/.test(n);\r\n}\r\n\r\nfunction isContainEqulasSign(f) {\r\n    if (f.length >= 2) {\r\n        return f[f.length-2] === '=';\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction getLast(f) {\r\n    return f[f.length - 1];\r\n}\r\n\r\nexport function addOperation(formula, op) {\r\n    if (isContainEqulasSign(formula)) {\r\n        if (op !== '=') {\r\n            var n = parseFloat(getLast(formula));\r\n            formula = [];\r\n            formula.push(n);\r\n            formula.push(op);\r\n        }\r\n    } else {\r\n        if (isNumber(getLast(formula))) {\r\n            let result;\r\n            if (op === '=') {\r\n                let str = formula.join('');\r\n                result = eval(str).toString();\r\n                formula.push(op);\r\n                formula.push(result);\r\n            } else {\r\n                formula.push(op);\r\n            }\r\n        } else {\r\n            formula.pop();\r\n            if (op === '=') {\r\n                let str = formula.join('');\r\n                let result = eval(str).toString();\r\n                formula.push(op);\r\n                formula.push(result);\r\n            } else {\r\n                formula.push(op);\r\n            }\r\n        }\r\n    }\r\n\r\n    return formula;\r\n}\r\n\r\nexport function addDigit(formula, digit) {\r\n    if (isContainEqulasSign(formula)) {\r\n        formula = [];\r\n        formula.push(digit);\r\n    } else {\r\n        var last = getLast(formula);\r\n        if (isNumber(last)) {\r\n            var n = last + digit;\r\n\r\n            // remove zeros at the beginning\r\n            if ('0' === last & (digit !== '.')) {\r\n                n = digit;\r\n            }\r\n            if (isNumber(n)) {\r\n                if (last.length <= 32) {\r\n                    formula[formula.length-1] = n;\r\n                }\r\n            }\r\n        } else {\r\n            formula.push(digit);\r\n        }\r\n    }\r\n\r\n    return formula;\r\n}\r\n\r\nconst main = (state = initialState, action) => {\r\n    var formula = [];\r\n    switch(action.type) {\r\n        case OPERATION: {\r\n            formula = state.slice();\r\n            formula = addOperation(formula, action.operation);\r\n            return formula;\r\n        }\r\n        case DIGIT: {\r\n            formula = state.slice();\r\n            formula = addDigit(formula, action.digit);\r\n            return formula;\r\n        }\r\n        case CLEAR: {\r\n            return initialState;\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default combineReducers({\r\n    main\r\n})","import React, { Component } from 'react'\r\n\r\nexport default class Display extends Component {\r\n  render() {\r\n    return (\r\n      <div id='display'>\r\n        {this.props.str}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport Display from '../components/Display'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    str: state.main[state.main.length - 1]\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Display)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Formula extends Component {\r\n  render() {\r\n    return (\r\n      <div id='formula'>\r\n        {this.props.str}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport Formula from '../components/Formula'\r\n\r\nconst mapStateToProps = (state) => ({\r\n    str: state.main.join('')\r\n})\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Formula)\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Buttons extends Component {\r\n  render() {\r\n    return (\r\n      <div id='buttons'>\r\n        <button id='clear' onClick={this.props.clear}>AC</button>\r\n        <button id='divide' onClick={() => this.props.addOperation('/')}>/</button>\r\n        <button id='multiply' onClick={() => this.props.addOperation('*')}>x</button>\r\n        <button id='seven' onClick={() => this.props.addDigit('7')}>7</button>\r\n        <button id='eight' onClick={() => this.props.addDigit('8')}>8</button>\r\n        <button id='nine' onClick={() => this.props.addDigit('9')}>9</button>\r\n        <button id='subtract' onClick={() => this.props.addOperation('-')}>-</button>\r\n        <button id='four' onClick={() => this.props.addDigit('4')}>4</button>\r\n        <button id='five' onClick={() => this.props.addDigit('5')}>5</button>\r\n        <button id='six' onClick={() => this.props.addDigit('6')}>6</button>\r\n        <button id='add' onClick={() => this.props.addOperation('+')}>+</button>\r\n        <button id='one' onClick={() => this.props.addDigit('1')}>1</button>\r\n        <button id='two' onClick={() => this.props.addDigit('2')}>2</button>\r\n        <button id='three' onClick={() => this.props.addDigit('3')}>3</button>\r\n        <button id='equals' onClick={() => this.props.addOperation('=')}>=</button>\r\n        <button id='zero' onClick={() => this.props.addDigit('0')}>0</button>\r\n        <button id='decimal' onClick={() => this.props.addDigit('.')}>.</button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import { connect } from 'react-redux'\r\nimport Buttons from '../components/Buttons'\r\nimport { clear, addDigit, addOperation } from '../actions'\r\n\r\nconst mapStateToProps = (state) => ({\r\n\r\n})\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    clear: () => dispatch(clear()),\r\n    addDigit: (d) => dispatch(addDigit(d)),\r\n    addOperation: (o) => dispatch(addOperation(o))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buttons)\r\n","import React, { Component } from 'react'\r\nimport DisplayContainer from '../containers/DisplayContainer';\r\nimport FormulaContainer from '../containers/FormulaContainer';\r\nimport ButtonsContainer from '../containers/ButtonsContainer';\r\n\r\nexport default class Calculator extends Component {\r\n  render() {\r\n    return (\r\n      <div id='calc'>\r\n        <FormulaContainer />\r\n        <DisplayContainer />\r\n        <ButtonsContainer />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.scss';\r\nimport Calculator from './components/Calculator';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nvar store = createStore(rootReducer)\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Calculator />\r\n    </Provider>,\r\n    document.getElementById('root')\r\n);","export const OPERATION = 'operation';\r\nexport const CLEAR = 'clear';\r\nexport const DIGIT = 'digit';\r\n\r\nexport const addOperation = (op) => ({\r\n    type: OPERATION,\r\n    operation: op\r\n})\r\n\r\nexport const clear = () => ({\r\n    type: CLEAR\r\n})\r\n\r\nexport const addDigit = (d) => ({\r\n    type: DIGIT,\r\n    digit: d\r\n})"],"sourceRoot":""}